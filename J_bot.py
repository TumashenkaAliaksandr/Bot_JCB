from telebot import types
import book, btn, regg, sell_form


user_dict = regg.user_dict


class User:
    def __init__(self, nickname, photo, document):
        self.nickname = nickname
        self.photo = photo
        self.document = document

        for key in keys:
            self.key = None

#bot = telebot.TeleBot(config.TOKEN)
bot = regg.bot
#hello_count = []

#START
@bot.message_handler(commands=['start'])
def start_message(message):
    #if len(hello_count) == 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å –ª–∏ –º—ã —Ä–∞–Ω–µ–µ
    bot.send_sticker(message.chat.id, book.sticker)
    bot.send_message(message.chat.id, message.from_user.first_name + book.hello)
    bot.send_message(message.chat.id, book.lang, reply_markup=keyboard1)

#–ú–ï–ù–Æ –í–´–ë–û–†–ê –Ø–ó–´–ö–ê
keyboard1 = types.ReplyKeyboardMarkup(True)
keyboard1.row(book.eng, book.rus)

#–†–£–°–°–ö–û–ï –ú–ï–ù–Æ
rMenu = btn.russian_menu
#–ê–ù–ì–õ–ò–ô–°–ö–û–ï –ú–ï–ù–Æ
eMenu = btn.english_menu

@bot.message_handler(content_types=['text'])
def send_text(message):
    #–í—ã–±–æ—Ä —è–∑—ã–∫–∞
    if message.text == 'üá¨üáß English':
        bot.send_message(message.chat.id, book.lang_eng, reply_markup=eMenu)
        bot.send_message(message.chat.id, book.check)
    elif message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn_reg = types.KeyboardButton(book.btnreg)
        btn_noAuto = types.KeyboardButton(book.btnNoaut)
        markup.add(btn_reg, btn_noAuto)
        bot.send_message(message.chat.id, book.lang_rus)
        bot.send_message(message.chat.id, book.reg, reply_markup=markup)

    elif message.text == '–£ –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç –∞–≤—Ç–æ':
        bot.send_message(message.chat.id, book.advice, reply_markup=btn.Our_communit)

    # –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–≥–ª
    elif message.text == '/check':
        bot.send_message(message.from_user.id, str(message.from_user.username) + book.ms_engl) # –¥–∞–ª—å—à–µ —ç—Ç–æ–≥–æ –Ω–µ –±—É–¥–µ—Ç–± –±—É–¥–µ—Ç –≤—Å–µ –∏–Ω–∞—á–µ
        bot.register_next_step_handler(message, regg)
    #–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, book.msMenu_back, reply_markup=rMenu)
    #–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–Ω–≥–ª
    elif message.text == 'üîô Main menu':
        bot.send_message(message.chat.id, book.msMenu_backEn, reply_markup=eMenu)

    #–†—É—Å—Å–∫–æ–µ –º–µ–Ω—é
    elif message.text == 'üöó –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        chat_id = message.chat.id
        user = user_dict[chat_id]
        bot.send_message(message.chat.id, regg.getRegData(user, 'üóø  –í–∞—à –Ω–∏–∫ –Ω–µ–π–º: '), parse_mode="Markdown")
        if user.document:
            bot.send_document(chat_id, caption='–í–∞—à–µ —Ñ–æ—Ç–æ', data=user.document_id)
        elif user.photo:
            bot.send_photo(chat_id, caption='–í–∞—à–µ —Ñ–æ—Ç–æ', photo=user.photo_id)



    elif message.text == 'üõí –ú–∞—Ä–∫–µ—Ç':
        bot.send_sticker(message.chat.id, book.sticker6)
        bot.send_message(message.chat.id, book.market, reply_markup=btn.market)
    elif message.text == 'üöó –ü—Ä–æ–¥–∞—Ç—å –∞–≤—Ç–æ':
        bot.send_sticker(message.chat.id, book.sticker6)
        bot.send_message(message.chat.id, sell_form.s)
    elif message.text == 'üì∞ –ù–æ–≤–æ—Å—Ç–∏':
        bot.send_sticker(message.chat.id, book.sticker1)
        bot.send_message(message.chat.id, book.news)
        bot.send_message(message.chat.id, 'üë• –ù–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ', reply_markup=btn.fak_otdyh)
    elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        bot.send_sticker(message.chat.id, book.sticker2)
        bot.send_message(message.chat.id, book.settingCh, reply_markup=btn.tuning)
    elif message.text == 'üë• –ù–∞—à–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞':
        bot.send_sticker(message.chat.id, book.sticker3)
        bot.send_message(message.chat.id, book.cha, reply_markup=btn.Our_communities)
    elif message.text == '‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞':
        bot.send_sticker(message.chat.id, book.sticker3)
        bot.send_message(message.chat.id, book.unique_link)


    #–û—Ç–¥—ã—Ö
    elif message.text == '‚òëÔ∏è –û—Ç–¥—ã—Ö':
        bot.send_message(message.chat.id, 'üë• –ù–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', reply_markup=btn.fak_otdyh)
    #–ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –º–µ–Ω—é

    elif message.text == 'üë≥üèΩ‚Äç‚ôÇÔ∏è About Us':
        bot.send_sticker(message.chat.id, book.sticker4)
        bot.send_message(message.chat.id, book.abt)
        bot.send_message(message.chat.id, book.ab, reply_markup=btn.about)
    elif message.text == 'üì∞ News':
        bot.send_sticker(message.chat.id, book.sticker1)
        bot.send_message(message.chat.id, book.news_engl)


btnFuck = btn.fakmenu  # –ö–Ω–æ–ø–∫–∏ –§–ê–ö, —Ñ–æ—Ä—É–º, –º–∞—Ä–∫–µ—Ç
reg_button = btn.reg_button  # –∫–Ω–æ–∫–∞ —Ä–µ–≥
sell_auto = sell_form.s # —Ñ–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ


# –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –≤ —Ñ–∞–π–ª "./.handlers-saves/step.save".
# Delay = 2 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–∑–æ–≤ register_next_step_handler ())
# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ 2 —Å–µ–∫—É–Ω–¥—ã.
bot.enable_save_next_step_handlers(delay=2)

# –ó–∞–≥—Ä—É–∑–∏—Ç—å next_step_handlers –∏–∑ —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "./.handlers-saves/step.save")
# –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª –≤—ã–∑–≤–∞–Ω enable_save_next_step_handlers!
bot.load_next_step_handlers()


#row_count = sheet_active.max_row #–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
#column_count = sheet_active.max_column #–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
bot.enable_save_next_step_handlers(delay=2)
bot.load_next_step_handlers()

# RUN
bot.polling(none_stop=True)